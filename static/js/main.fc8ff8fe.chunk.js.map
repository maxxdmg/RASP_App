{"version":3,"sources":["components/Save/Save.js","components/StringInput/StringInput.js","components/ColorInput/ColorInput.js","components/ImageInput/ImageInput.js","axios-template.js","containers/Generator/Generator.js","App.js","index.js"],"names":["Save","state","handleSave","zip","generateAsync","type","then","content","FileSaver","saveAs","_this2","this","JSZip","outputContent","props","inputData","forEach","data","inputType","inputId","name","file","imgData","img","folder","val","base64","react_default","a","createElement","disabled","saveable","className","onClick","Component","StringInput","labelText","onChange","changed","inputName","value","ColorInput","text","textVal","ImageInput","instance","axios","create","baseURL","Generator","itemCount","inputs","values","getDataFile","get","res","console","log","_this","loadFile","length","setState","catch","err","getStringInputs","newInputs","strInputsObj","string_inputs","Object","keys","key","newInput","createInput","concat","toConsumableArray","getColorInputs","clrInputsObj","color_inputs","getImageInputs","imgInputsObj","image_inputs","newStringInputs","newColorInputs","newImageInputs","input_id","newRandomNumeric","i","Math","floor","random","String","fromCharCode","handleInputChange","e","target","files","defineProperty","currInputName","newInputData","newInputContent","inp","objectSpread","map","strname","components_StringInput_StringInput","clrname","components_ColorInput_ColorInput","components_ImageInput_ImageInput","error","components_Save_Save","App","containers_Generator_Generator","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fc8ff8fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport JSZip from \"jszip\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nclass Save extends Component {\r\n  state = {};\r\n\r\n  handleSave = zip => {\r\n    zip.generateAsync({ type: \"blob\" }).then(content => {\r\n      FileSaver.saveAs(content, \"RASP_Output.zip\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let zip = new JSZip();\r\n    let outputContent = \"\";\r\n\r\n    this.props.inputData.forEach(data => {\r\n        if (!data.content) {\r\n          if (data.inputType === \"CLR\")\r\n            outputContent += data.inputId + \":#ffffff\\n\";\r\n          else outputContent += data.inputId + \":\\n\";\r\n        } else if (data.inputType === \"IMG\")  outputContent += data.inputId + \":\" + data.content.name;\r\n        else outputContent += data.inputId + \":\" + data.content + \"\\n\";\r\n    });\r\n\r\n    zip.file(\"output.RASP\", outputContent);\r\n\r\n    if (this.props.imgData) {\r\n      let img = zip.folder(\"images\");\r\n      this.props.imgData.forEach(val => {\r\n        if (val) img.file(val.name, val, { base64: true });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <button\r\n        disabled={!this.props.saveable}\r\n        className=\"saveButton\"\r\n        onClick={() => this.handleSave(zip)}\r\n      >\r\n        Save\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Save;\r\n","import React from \"react\";\r\n\r\nconst StringInput = props => {\r\n  let val = \"\";\r\n  if (props.val) val = props.val;\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <label className=\"item-label\">{props.labelText}</label>\r\n      <input\r\n        onChange={props.changed}\r\n        name={props.inputName}\r\n        value={val}\r\n        className=\"item-input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StringInput;\r\n","import React from \"react\";\r\n\r\nconst ColorInput = props => {\r\n  let text = \"#fffffff\";\r\n  if (props.textVal) text = props.textVal;\r\n\r\n  return (\r\n    <div className=\"item-container\">\r\n      <label className=\"item-label\">{props.labelText}</label>\r\n      <div className=\"item-input-color-container\">\r\n        <input\r\n          onChange={props.changed}\r\n          name={props.inputName}\r\n          type=\"color\"\r\n          className=\"item-input-color\"\r\n        />\r\n        <h4 className=\"item-input-color-text\">{text}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorInput;\r\n","import React from \"react\";\r\n\r\nconst ImageInput = props => {\r\n  return (\r\n    <div className=\"item-container\">\r\n      <label className=\"item-label\">{props.labelText}</label>\r\n      <input\r\n        type=\"file\"\r\n        onChange={props.changed}\r\n        name={props.inputName}\r\n        className=\"item-input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageInput;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://raspdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from \"react\";\r\n\r\nimport Save from \"../../components/Save/Save.js\";\r\nimport StringInput from \"../../components/StringInput/StringInput.js\";\r\nimport ColorInput from \"../../components/ColorInput/ColorInput.js\";\r\nimport ImageInput from \"../../components/ImageInput/ImageInput.js\";\r\nimport instance from '../../axios-template.js';\r\n\r\nclass Generator extends Component {\r\n  state = {\r\n    saveable: false,\r\n    itemCount: 0,\r\n    inputs: [],\r\n    values: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFile();\r\n\r\n    if(this.props.data){\r\n       const inputs = this.loadFile(this.props.data);\r\n      let saveable;\r\n\r\n      inputs.length ? (saveable = true) : (saveable = false);\r\n\r\n      this.setState({\r\n        saveable,\r\n        inputs\r\n      });\r\n    }\r\n  }\r\n\r\n  getDataFile = () => {\r\n    instance.get('/devtest.json')\r\n    .then(res => {\r\n      console.log(res.data);\r\n      let inputs = this.loadFile(res.data);\r\n      let saveable;\r\n      inputs.length ? (saveable = true) : (saveable = false);\r\n      this.setState({\r\n        saveable,\r\n        inputs\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  getStringInputs = file => {\r\n    let newInputs = [];\r\n    let strInputsObj = file.inputs.string_inputs;\r\n    Object.keys(strInputsObj).forEach(key => {\r\n      let newInput = this.createInput(strInputsObj[key], key, \"STR\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  getColorInputs = file => {\r\n    let newInputs = [];\r\n    let clrInputsObj = file.inputs.color_inputs;\r\n    Object.keys(clrInputsObj).forEach(key => {\r\n      let newInput = this.createInput(clrInputsObj[key], key, \"CLR\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  getImageInputs = file => {\r\n    let newInputs = [];\r\n    let imgInputsObj = file.inputs.image_inputs;\r\n    Object.keys(imgInputsObj).forEach(key => {\r\n      let newInput = this.createInput(imgInputsObj[key], key, \"IMG\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  loadFile = file => {\r\n    let inputs = [];\r\n    let newStringInputs = this.getStringInputs(file);\r\n    let newColorInputs = this.getColorInputs(file);\r\n    let newImageInputs = this.getImageInputs(file);\r\n\r\n    inputs = [...newStringInputs, ...newColorInputs, ...newImageInputs];\r\n\r\n    return inputs;\r\n  };\r\n\r\n  createInput = (labelText, input_id, inputType) => {\r\n    let inputName = \"\";\r\n    let newRandomNumeric = 0;\r\n    let newRandomChar = \"\";\r\n\r\n    for (let i = 0; i < 26; i++) {\r\n      newRandomNumeric = Math.floor(Math.random() * 26) + 97;\r\n      newRandomChar = String.fromCharCode(newRandomNumeric);\r\n      inputName += newRandomChar;\r\n    }\r\n\r\n    let newInput = {\r\n      labelText: labelText,\r\n      inputId: input_id,\r\n      inputName: inputName,\r\n      inputType: inputType\r\n    };\r\n\r\n    return newInput;\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    let value;\r\n    if (e.target.files) value = e.target.files[0];\r\n    else value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let inputData = [];\r\n    let currInputName = \"\";\r\n    let newInputData = {};\r\n    let newInputContent = \"\";\r\n\r\n    this.state.inputs.forEach(inp => {\r\n      currInputName = inp.inputName;\r\n      newInputContent = this.state[currInputName];\r\n      newInputData = { ...inp, content: newInputContent };\r\n      inputData = [...inputData, newInputData];\r\n    });\r\n\r\n    const inputs = this.state.inputs.map(inp => {\r\n      switch (inp.inputType) {\r\n        case \"STR\":\r\n          let strname = inp.inputName;\r\n          return (\r\n            <StringInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n              val={this.state[strname]}\r\n            />\r\n          );\r\n        case \"CLR\":\r\n          // Need to define name here so the hex text next to the color input\r\n          // will change to the color picked.\r\n          let clrname = inp.inputName;\r\n          return (\r\n            <ColorInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n              textVal={this.state[clrname]}\r\n            />\r\n          );\r\n        case \"IMG\":\r\n          return (\r\n            <ImageInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n            />\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    });\r\n\r\n    let imgData = [];\r\n    this.state.inputs.forEach(inp => {\r\n      if (inp.inputType === \"IMG\")\r\n        \timgData = [...imgData, this.state[inp.inputName]];\r\n    });\r\n\r\n    let error = <div />;\r\n    if (!this.state.inputs.length) {\r\n      error = (\r\n        <div>\r\n          <h4>RASP_Data file is empty!</h4>\r\n          <p>Find it in ./src/data/RASP_Data</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    console.log(inputData);\r\n\r\n    return (\r\n      <div>\r\n        {error}\r\n        {inputs}\r\n        <Save\r\n          saveable={this.state.saveable}\r\n          inputData={inputData}\r\n          imgData={imgData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Generator;\r\n","import React, { Component } from \"react\";\nimport Generator from \"./containers/Generator/Generator.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n\trender() {\n\t\treturn <Generator className=\"Generator\" />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}