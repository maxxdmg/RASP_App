{"version":3,"sources":["components/Save/Save.js","components/StringInput/StringInput.js","components/ColorInput/ColorInput.js","components/ImageInput/ImageInput.js","axios-template.js","containers/Generator/Generator.js","components/Header/Header.js","App.js","index.js","components/Header/bg.png"],"names":["Save","state","handleSave","zip","generateAsync","type","then","content","FileSaver","saveAs","_this2","this","JSZip","outputContent","props","id","inputData","forEach","data","inputType","inputId","name","file","imgData","img","folder","val","base64","react_default","a","createElement","disabled","saveable","style","width","height","borderRadius","marginLeft","className","onClick","Component","StringInput","border","overflow","fontSize","labelText","onChange","changed","inputName","value","ColorInput","text","textVal","fontWeight","ImageInput","instance","axios","create","baseURL","Generator","itemCount","inputs","values","getDataFile","get","res","console","log","Object","keys","_this","loadFile","length","setState","catch","err","getStringInputs","newInputs","strInputsObj","devtest","string_inputs","key","newInput","createInput","concat","toConsumableArray","getColorInputs","clrInputsObj","color_inputs","getImageInputs","imgInputsObj","image_inputs","newStringInputs","newColorInputs","newImageInputs","input_id","newRandomNumeric","i","Math","floor","random","String","fromCharCode","handleInputChange","e","target","files","defineProperty","currInputName","newInputData","newInputContent","inp","objectSpread","map","strname","components_StringInput_StringInput","clrname","components_ColorInput_ColorInput","components_ImageInput_ImageInput","error","components_Save_Save","Header","backgroundImage","bg","boxShadow","App","components_Header_Header","containers_Generator_Generator","ReactDOM","render","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.550c5536.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport JSZip from \"jszip\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nclass Save extends Component {\r\n  state = {};\r\n\r\n  handleSave = zip => {\r\n    zip.generateAsync({ type: \"blob\" }).then(content => {\r\n      FileSaver.saveAs(content, \"RASP_Output.zip\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let zip = new JSZip();\r\n    let outputContent = \"\";\r\n\r\n    outputContent += this.props.id + \"\\n\";\r\n\r\n    this.props.inputData.forEach(data => {\r\n      if (!data.content) {\r\n        if (data.inputType === \"CLR\")\r\n          outputContent += data.inputId + \":#ffffff\\n\";\r\n        else outputContent += data.inputId + \":\\n\";\r\n      } else if (data.inputType === \"IMG\")\r\n        outputContent += data.inputId + \":\" + data.content.name;\r\n      else outputContent += data.inputId + \":\" + data.content + \"\\n\";\r\n    });\r\n\r\n    zip.file(\"output.RASP\", outputContent);\r\n\r\n    if (this.props.imgData) {\r\n      let img = zip.folder(\"images\");\r\n      this.props.imgData.forEach(val => {\r\n        if (val) img.file(val.name, val, { base64: true });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <button\r\n        disabled={!this.props.saveable}\r\n        style={{\r\n          width: \"5vw\",\r\n          height: \"3vw\",\r\n          borderRadius: \"7.5%\",\r\n          marginLeft: \"10vw\"\r\n        }}\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={() => this.handleSave(zip)}\r\n      >\r\n        Save\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Save;\r\n","import React from \"react\";\n\nconst StringInput = props => {\n  let val = \"\";\n  if (props.val) val = props.val;\n\n  return (\n    <div\n      style={{ border: \"1px solid #0094FFFF\", overflow: \"hidden\" }}\n      className=\"w-25 row ml-3 mb-2 p-3\"\n    >\n      <label style={{ fontSize: \"20px\" }} className=\"col-12\">\n        {props.labelText}\n      </label>\n      <div className=\"input-group\">\n        <input\n          onChange={props.changed}\n          name={props.inputName}\n          value={val}\n          className=\"form-control\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StringInput;\n","import React from \"react\";\n\nconst ColorInput = props => {\n  let text = \"#fffffff\";\n  if (props.textVal) text = props.textVal;\n\n  return (\n    <div\n      style={{ border: \"1px solid #0094FFFF\", overflow: \"hidden\" }}\n      className=\"w-25 row ml-3 mb-2 p-3\"\n    >\n      <label style={{ fontSize: \"20px\" }} className=\"col-12\">\n        {props.labelText}\n      </label>\n      <input\n        style={{ width: \"2vw\", height: \"2vw\", border: \"none\" }}\n        onChange={props.changed}\n        name={props.inputName}\n        type=\"color\"\n        className=\"ml-3 p-0 col-3\"\n      />\n      <h4\n        style={{ width: \"1vw\", fontWeight: \"bold\" }}\n        className=\"m-0 pl-2 col-4\"\n      >\n        {text}\n      </h4>\n    </div>\n  );\n};\n\nexport default ColorInput;\n","import React from \"react\";\n\nconst ImageInput = props => (\n  <div\n    style={{ border: \"1px solid #0094FFFF\", overflow: \"hidden\" }}\n    className=\"w-25 row ml-3 mb-2 p-3\"\n  >\n    <label style={{ fontSize: \"20px\" }} className=\"col-12\">\n      {props.labelText}\n    </label>\n    <input\n      type=\"file\"\n      onChange={props.changed}\n      name={props.inputName}\n      className=\"col-12\"\n    />\n  </div>\n);\n\nexport default ImageInput;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://raspio.herokuapp.com\"\n});\n\nexport default instance;\n","import React, { Component } from \"react\";\r\n\r\nimport Save from \"../../components/Save/Save\";\r\nimport StringInput from \"../../components/StringInput/StringInput\";\r\nimport ColorInput from \"../../components/ColorInput/ColorInput\";\r\nimport ImageInput from \"../../components/ImageInput/ImageInput\";\r\nimport instance from \"../../axios-template.js\";\r\n\r\nclass Generator extends Component {\r\n  state = {\r\n    id: \"\",\r\n    saveable: false,\r\n    itemCount: 0,\r\n    inputs: [],\r\n    values: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFile();\r\n\r\n    if (this.props.data) {\r\n      const inputs = this.loadFile(this.props.data);\r\n      let saveable;\r\n\r\n      inputs.length ? (saveable = true) : (saveable = false);\r\n\r\n      this.setState({\r\n        saveable,\r\n        inputs\r\n      });\r\n    }\r\n  }\r\n\r\n  getDataFile = () => {\r\n    instance\r\n      .get(\"/devtest\")\r\n      .then(res => {\r\n        console.log(\"= RES DATA =\");\r\n        let id = Object.keys(res.data)[0];\r\n        let inputs = this.loadFile(res.data);\r\n        let saveable;\r\n        inputs.length ? (saveable = true) : (saveable = false);\r\n        this.setState({\r\n          id,\r\n          saveable,\r\n          inputs\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  getStringInputs = file => {\r\n    let newInputs = [];\r\n    let strInputsObj = file.devtest.string_inputs;\r\n    Object.keys(strInputsObj).forEach(key => {\r\n      let newInput = this.createInput(strInputsObj[key], key, \"STR\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  getColorInputs = file => {\r\n    let newInputs = [];\r\n    let clrInputsObj = file.devtest.color_inputs;\r\n    Object.keys(clrInputsObj).forEach(key => {\r\n      let newInput = this.createInput(clrInputsObj[key], key, \"CLR\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  getImageInputs = file => {\r\n    let newInputs = [];\r\n    let imgInputsObj = file.devtest.image_inputs;\r\n    Object.keys(imgInputsObj).forEach(key => {\r\n      let newInput = this.createInput(imgInputsObj[key], key, \"IMG\");\r\n      newInputs = [...newInputs, newInput];\r\n    });\r\n    console.log(newInputs);\r\n    return newInputs;\r\n  };\r\n\r\n  loadFile = file => {\r\n    let inputs = [];\r\n    let newStringInputs = this.getStringInputs(file);\r\n    let newColorInputs = this.getColorInputs(file);\r\n    let newImageInputs = this.getImageInputs(file);\r\n\r\n    inputs = [...newStringInputs, ...newColorInputs, ...newImageInputs];\r\n\r\n    return inputs;\r\n  };\r\n\r\n  createInput = (labelText, input_id, inputType) => {\r\n    let inputName = \"\";\r\n    let newRandomNumeric = 0;\r\n    let newRandomChar = \"\";\r\n\r\n    for (let i = 0; i < 26; i++) {\r\n      newRandomNumeric = Math.floor(Math.random() * 26) + 97;\r\n      newRandomChar = String.fromCharCode(newRandomNumeric);\r\n      inputName += newRandomChar;\r\n    }\r\n\r\n    let newInput = {\r\n      labelText: labelText,\r\n      inputId: input_id,\r\n      inputName: inputName,\r\n      inputType: inputType\r\n    };\r\n\r\n    return newInput;\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    let value;\r\n    if (e.target.files) value = e.target.files[0];\r\n    else value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let inputData = [];\r\n    let currInputName = \"\";\r\n    let newInputData = {};\r\n    let newInputContent = \"\";\r\n\r\n    this.state.inputs.forEach(inp => {\r\n      currInputName = inp.inputName;\r\n      newInputContent = this.state[currInputName];\r\n      newInputData = { ...inp, content: newInputContent };\r\n      inputData = [...inputData, newInputData];\r\n    });\r\n\r\n    const inputs = this.state.inputs.map(inp => {\r\n      switch (inp.inputType) {\r\n        case \"STR\":\r\n          let strname = inp.inputName;\r\n          return (\r\n            <StringInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n              val={this.state[strname]}\r\n            />\r\n          );\r\n        case \"CLR\":\r\n          // Need to define name here so the hex text next to the color input\r\n          // will change to the color picked.\r\n          let clrname = inp.inputName;\r\n          return (\r\n            <ColorInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n              textVal={this.state[clrname]}\r\n            />\r\n          );\r\n        case \"IMG\":\r\n          return (\r\n            <ImageInput\r\n              labelText={inp.labelText}\r\n              inputName={inp.inputName}\r\n              key={inp.inputName}\r\n              changed={this.handleInputChange}\r\n            />\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    });\r\n\r\n    let imgData = [];\r\n    this.state.inputs.forEach(inp => {\r\n      if (inp.inputType === \"IMG\")\r\n        imgData = [...imgData, this.state[inp.inputName]];\r\n    });\r\n\r\n    let error = <div />;\r\n    if (!this.state.inputs.length) {\r\n      error = (\r\n        <div>\r\n          <h4>RASP_Data file is empty!</h4>\r\n          <p>Find it in ./src/data/RASP_Data</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let id = <div />;\r\n    if (this.state.id)\r\n      id = <h3 className={\"pl-3 pt-3 pb-1\"}>template: {this.state.id}</h3>;\r\n\r\n    return (\r\n      <div>\r\n        {error}\r\n        {id}\r\n        {inputs}\r\n        <Save\r\n          id={this.state.id}\r\n          saveable={this.state.saveable}\r\n          inputData={inputData}\r\n          imgData={imgData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Generator;\r\n","import React from \"react\";\nimport bg from \"./bg.png\";\n\nconst Header = props => (\n  <div\n    className=\"container-fluid\"\n    style={{\n      height: \"5em\",\n      backgroundImage: `url(${bg})`,\n      boxShadow: \"0px 0px 1px 1px #0094FFFF\"\n    }}\n  >\n    <div className=\"row\">\n      <div className=\"col-5\" />\n      <h1>RASP</h1>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Generator from \"./containers/Generator/Generator.js\";\nimport Header from \"./components/Header/Header.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Generator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/bg.83987975.png\";"],"sourceRoot":""}